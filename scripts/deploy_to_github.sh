#!/bin/bash

# ======================================================================
# üöÄ –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ Android Remote Monitoring System
# üë®‚Äçüíª –ê–≤—Ç–æ—Ä: ReliableSecurity (https://github.com/ReliableSecurity)
# üìû Telegram: @ReliableSecurity
# ‚öñÔ∏è –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è Android API
# ======================================================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –õ–æ–≥–æ—Ç–∏–ø
echo -e "${PURPLE}"
echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó"
echo "‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù"
echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  "
echo "‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  "
echo "‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó"
echo "‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"
echo -e "${CYAN}üîí Android Remote Monitoring System - GitHub Deploy${NC}"
echo -e "${YELLOW}üë®‚Äçüíª –ê–≤—Ç–æ—Ä: ReliableSecurity | üìû @ReliableSecurity${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "${BLUE}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
if ! command -v git &> /dev/null; then
    echo -e "${RED}‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub CLI (gh)
if command -v gh &> /dev/null; then
    echo -e "${GREEN}‚úÖ GitHub CLI –Ω–∞–π–¥–µ–Ω${NC}"
    GH_CLI_AVAILABLE=true
else
    echo -e "${YELLOW}‚ö†Ô∏è GitHub CLI (gh) –Ω–µ –Ω–∞–π–¥–µ–Ω - –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω manual —Ä–µ–∂–∏–º${NC}"
    GH_CLI_AVAILABLE=false
fi

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
PROJECT_NAME="android-remote-monitoring"
REPO_DESCRIPTION="üïµÔ∏è Advanced Android Remote Monitoring System with Stealth Mode - Educational Project for Android API Learning (5.0-14 Compatible)"
REPO_TOPICS="android,monitoring,stealth,security,educational,api,java,mobile,surveillance,research"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
if [ ! -d ".git" ]; then
    echo -e "${RED}‚ùå –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º!${NC}"
    exit 1
fi

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
echo -e "${BLUE}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:${NC}"
FILE_COUNT=$(find . -type f | grep -v '\.git' | wc -l)
JAVA_LINES=$(find . -name "*.java" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}' || echo "0")
COMMIT_COUNT=$(git rev-list --count HEAD)

echo -e "  üìÅ –§–∞–π–ª–æ–≤: ${GREEN}$FILE_COUNT${NC}"
echo -e "  üìù –°—Ç—Ä–æ–∫ Java: ${GREEN}$JAVA_LINES${NC}"  
echo -e "  üíæ –ö–æ–º–º–∏—Ç–æ–≤: ${GREEN}$COMMIT_COUNT${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
if ! git diff --quiet || ! git diff --cached --quiet; then
    echo -e "${YELLOW}‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è${NC}"
    echo -e "${BLUE}üìù –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π...${NC}"
    
    git add .
    git commit -m "üîß Final preparations for GitHub publication

‚úÖ All components ready for deployment
üìä Statistics: $FILE_COUNT files, $JAVA_LINES lines Java code
üöÄ Ready for educational use

üë®‚Äçüíª Author: ReliableSecurity
üìû Contact: @ReliableSecurity"
    
    echo -e "${GREEN}‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã${NC}"
fi

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —á–µ—Ä–µ–∑ GitHub CLI
create_repo_with_gh() {
    echo -e "${BLUE}üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è —á–µ—Ä–µ–∑ GitHub CLI...${NC}"
    
    gh repo create "$PROJECT_NAME" \
        --description "$REPO_DESCRIPTION" \
        --public \
        --clone=false \
        --add-readme=false
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ remote –∏ push
setup_and_push() {
    local github_user
    
    if [ "$GH_CLI_AVAILABLE" = true ]; then
        github_user=$(gh api user --jq .login 2>/dev/null || echo "ReliableSecurity")
    else
        echo -e "${YELLOW}üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à GitHub username:${NC}"
        read -r github_user
        if [ -z "$github_user" ]; then
            github_user="ReliableSecurity"
        fi
    fi
    
    local repo_url="https://github.com/${github_user}/${PROJECT_NAME}.git"
    
    echo -e "${BLUE}üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ remote origin...${NC}"
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ origin –µ—Å–ª–∏ –µ—Å—Ç—å
    git remote remove origin 2>/dev/null || true
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ origin
    git remote add origin "$repo_url"
    
    echo -e "${BLUE}üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ GitHub...${NC}"
    
    # Push —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π upstream
    if git push -u origin main; then
        echo -e "${GREEN}‚úÖ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ GitHub!${NC}"
        echo -e "${CYAN}üåê –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:${NC}"
        echo -e "${YELLOW}   $repo_url${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ GitHub${NC}"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
echo -e "${PURPLE}üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ü–£–ë–õ–ò–ö–ê–¶–ò–Æ –ù–ê GITHUB...${NC}"
echo ""

if [ "$GH_CLI_AVAILABLE" = true ]; then
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if ! gh auth status &>/dev/null; then
        echo -e "${YELLOW}üîê –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ GitHub...${NC}"
        echo -e "${BLUE}–í—ã–ø–æ–ª–Ω–∏—Ç–µ: gh auth login${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ GitHub CLI –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω${NC}"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    if create_repo_with_gh; then
        setup_and_push
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–¥ –≤ manual —Ä–µ–∂–∏–º...${NC}"
        GH_CLI_AVAILABLE=false
    fi
fi

if [ "$GH_CLI_AVAILABLE" = false ]; then
    echo -e "${YELLOW}üìã MANUAL –†–ï–ñ–ò–ú${NC}"
    echo -e "${BLUE}–í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
    echo ""
    echo -e "${CYAN}1. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub:${NC}"
    echo -e "   üåê –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com/new"
    echo -e "   üìù –ò–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: ${YELLOW}$PROJECT_NAME${NC}"
    echo -e "   üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: ${YELLOW}$REPO_DESCRIPTION${NC}"
    echo -e "   üîì –°–¥–µ–ª–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø—É–±–ª–∏—á–Ω—ã–º"
    echo -e "   ‚ùå –ù–ï —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ README.md (—É–∂–µ –µ—Å—Ç—å)"
    echo ""
    echo -e "${CYAN}2. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
    read -r
    
    setup_and_push
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
echo -e "${PURPLE}üéâ –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!${NC}"
echo ""
echo -e "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –Ω–∞ GitHub${NC}"
echo -e "${BLUE}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:${NC}"
echo -e "  üìÅ –§–∞–π–ª–æ–≤: $FILE_COUNT"
echo -e "  üìù –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: $JAVA_LINES"
echo -e "  üíæ –ö–æ–º–º–∏—Ç–æ–≤: $COMMIT_COUNT"
echo ""
echo -e "${CYAN}üîó –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º:${NC}"
echo -e "${YELLOW}  git status${NC}           - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"
echo -e "${YELLOW}  git pull${NC}             - –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"
echo -e "${YELLOW}  git push${NC}             - –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
echo -e "${YELLOW}  gh repo view${NC}         - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
echo ""
echo -e "${PURPLE}üë®‚Äçüíª –ê–≤—Ç–æ—Ä: ReliableSecurity${NC}"
echo -e "${PURPLE}üìû Telegram: @ReliableSecurity${NC}"
echo -e "${PURPLE}‚öñÔ∏è –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏—á–Ω–æ!${NC}"
echo ""

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
if [ "$GH_CLI_AVAILABLE" = true ]; then
    echo -e "${YELLOW}üåê –û—Ç–∫—Ä—ã—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤ –±—Ä–∞—É–∑–µ—Ä–µ? (y/n):${NC}"
    read -r open_browser
    if [[ "$open_browser" =~ ^[Yy]$ ]]; then
        gh repo view --web
    fi
fi

echo -e "${GREEN}üéä –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–µ–∫—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.${NC}"